#
# ao-net-types - Networking-related value types for Java.
# Copyright (C) 2016, 2017  AO Industries, Inc.
#     support@aoindustries.com
#     7262 Bull Pen Cir
#     Mobile, AL 36695
#
# This file is part of ao-net-types.
#
# ao-net-types is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# ao-net-types is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with ao-net-types.  If not, see <http://www.gnu.org/licenses/>.
#
DomainLabel.validate.isNull=Domain label is null
DomainLabel.validate.empty=Domain label is empty
DomainLabel.validate.tooLong=Domain label is longer than {0} characters: {1}
DomainLabel.validate.invalidCharacter=Domain label contains an invalid character ''{0}'' at position {1}
DomainLabel.validate.startsDash=Domain label begins with a hyphen
DomainLabel.validate.endsDash=Domain label ends with a hyphen
DomainLabels.validate.isNull=Labels are null
DomainLabels.validate.empty=Labels are empty
DomainLabels.validate.tooLong=Labels is longer than {0} characters: {1}
DomainName.validate.isNull=Domain is null
DomainName.validate.empty=Domain is empty
DomainName.validate.isDefault=Domain may not be "default"
DomainName.validate.tooLong=Domain is longer than {0} characters: {1}
DomainName.validate.lastLabelAllDigits=Last label is all digits
DomainName.validate.notEndTopLevelDomain=Last label is not a valid top level domain: {0}
Email.validate.isNull=Email is null
Email.validate.empty=Email is empty
Email.validate.noAt=Email does not contain any @ symbol
Email.validate.localePart.isNull=Local part is null
Email.validate.domain.isNull=Domain is null
Email.validate.domain.isArpa=Domain is an ARPA
Email.validate.domain.noDot=Domain does not contain any dot
Email.validate.tooLong=Email longer than {0} characters: {1}
Email.validate.localePart.empty=Local part is empty
Email.validate.localePart.tooLong=Local part is longer than {0} characters: {1}
Email.validate.localePart.startsDot=Local part begins with a dot
Email.validate.localePart.endsDot=Local part ends with a dot
Email.validate.localePart.doubleDot=Local part contains consecutive dots at position {0}
Email.validate.localePart.invalidCharacter=Local part contains an invalid character ''{0}'' at postion {1}
HostAddress.validate.bothNull=Host address contains both null domain name and null IP address
HostAddress.validate.bothNonNull=Host address contains both domain name and IP address
InetAddress.validate.isNull=IP address is null
InetAddress.parse.empty=IP address is empty
InetAddress.parse.tooLong=IP address too long
InetAddress.parse.oneDot=IP address contains only one dot (.)
InetAddress.parse.twoDots=IP address contains only two dots (.)
InetAddress.parseOctet.empty=IP address contains an empty octet
InetAddress.parseOctet.tooLong=IP address contains an octet that is too long
InetAddress.parseOctet.nonDecimal=IP address octet contains a non-decimal character: {0}
InetAddress.parseOctet.tooBig=IP address contains an octet that is greater than 255
#InetAddress.parse.noColonOrDot=IP address contains neither a colon (:) nor a dot (.)
InetAddress.parse.notEnoughColons=IP address does not contain enough colons (:)
InetAddress.parse.tooManyColons=IP address contains too many colons (:)
InetAddress.parseHexWord.empty=IP address contains an empty word
InetAddress.parseHexWord.tooLong=IP address contains an word that is too long
InetAddress.getHexValue.badCharacter=IP address word contains a non-hexadecimal character: {0}
InetAddressPrefix.validate.address.isNull=IP address is null
InetAddressPrefix.validate.prefix.lessThanZero=Prefix is less than zero: {0}
InetAddressPrefix.validate.prefix.tooBig=Prefix exceeds the maximum allowed value: {0} > {1}
MacAddress.checkHexValue.badCharacter=MAC address contains a non-hexadecimal character: {0}
MacAddress.validate.isNull=MAC address is null
MacAddress.parse.incorrectLength=MAC is not 17 character long: {0}
MacAddress.parse.notColon=MAC address is not a colon (:) at position {0}
Port.validate.lessThanOne=port < 1: {0}
Port.validate.greaterThan64k=port > 65535: {0}
Port.validate.unsupportedProtocol=Unsupported protocol, must be TCP or UDP: {0}
PortRange.validate.from.lessThanOne=from < 1: {0}
PortRange.validate.from.greaterThan64k=from > 65535: {0}
PortRange.validate.to.lessThanOne=to < 1: {0}
PortRange.validate.to.greaterThan64k=to > 65535: {0}
PortRange.validate.toLessThanFrom=to < from: {0} < {1}
PortRange.validate.fromEqualsTo=from == to: {0} == {1}
